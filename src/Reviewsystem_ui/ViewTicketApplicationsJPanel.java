/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Reviewsystem_ui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anush
 */
public class ViewTicketApplicationsJPanel extends javax.swing.JPanel {

    static Connection con;
    int TicketId=0;
    /**
     * Creates new form ViewTicketApplications
     */
    public ViewTicketApplicationsJPanel() {
        initComponents();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        issue = new javax.swing.JTextArea();
        ticketid = new javax.swing.JTextField();
        closeTicket = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEmailAdd = new javax.swing.JTextField();
        jLabelResponse = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Ticket ID", "Customer ID", "Customer Name", "Issue", "Ticket Status", "email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 780, 227));

        issue.setColumns(20);
        issue.setRows(5);
        jScrollPane2.setViewportView(issue);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 272, 131));
        add(ticketid, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 161, 39));

        closeTicket.setBackground(new java.awt.Color(0, 204, 51));
        closeTicket.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        closeTicket.setText("SEND EMAIL");
        closeTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeTicketActionPerformed(evt);
            }
        });
        add(closeTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 500, 129, 40));

        jLabel1.setText("Ticket Id");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 256, 125, 39));

        jLabel2.setText("Response to the issue");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 140, 41));

        jLabel3.setText("Re-enter email");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 270, -1, -1));
        add(jTextFieldEmailAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 270, 260, -1));

        jLabelResponse.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        add(jLabelResponse, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 600, 690, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        // get the selected row index
        int selectedRowIndex = table.getSelectedRow();
        // set the selected row data into jtextfields
        //customerId.setText(model.getValueAt(selectedRowIndex, 1).toString());
        TicketId = Integer.parseInt((model.getValueAt(selectedRowIndex, 0).toString()));
        System.out.println(TicketId);
        ticketid.setText(String.valueOf(TicketId));
        issue.setText(model.getValueAt(selectedRowIndex, 3).toString());
    }//GEN-LAST:event_tableMouseClicked

    private void closeTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeTicketActionPerformed
      Properties props = new Properties();
        System.out.println("wait");
        try {
            Thread.sleep(2000);
        } catch (InterruptedException ex) {
            Logger.getLogger(ConfirmationEmail.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("wait here");
        props.put("mail.smtp.host","smtp.gmail.com");
        props.put("mail.smtp.port",465);
        props.put("mail.smtp.user","shivanirahatwad3299@gmail.com");
        props.put("mail.smtp.auth","true");
        props.put("mail.smtp.starttls.enable","true");
        props.put("mail.smtp.debug","true");
        props.put("mail.smtp.socketFactory.port",465);
        props.put("mail.smtp.socketFactory.class","javax.neet.ssl.SSLSocketFactory");
        props.put("mail.smtp.socketFactory.fallback","false");
        System.out.println("outside");
        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/BONVOYAGE", "root", "shivani3299");
            PreparedStatement pstmt = c.prepareStatement("SELECT dob FROM BookingCustomer where emailaddress LIKE'"+jTextFieldEmailAdd.getText().trim()+"'");
            ResultSet rs = pstmt.executeQuery();
            if(rs.next())
            {
            String fetcheddob = rs.getString("dob");
            Session session = Session.getDefaultInstance(props,null);
            session.setDebug(true);
            MimeMessage message = new MimeMessage(session);
            message.setText("Your Ride is confirmed ,Your driver will call you shortly.Your OTp is" + fetcheddob);
            message.setSubject("Your Ride is confirmed");
            message.setFrom(new InternetAddress("shivanirahatwad3299@gmail.com"));
            message.addRecipient(Message.RecipientType.TO,new InternetAddress(jTextFieldEmailAdd.getText().trim()));
            message.saveChanges();
            Transport transport = session.getTransport("smtp");
            transport.connect("smtp.gmail.com","my_gmail_id","my_gmailpassword");
            transport.sendMessage(message,message.getAllRecipients());
            transport.close();
            jLabelResponse.setText("Your Ride has been booked,please check email for confirmation");
            System.out.println("None");
            }

        
        }catch (ClassNotFoundException | SQLException | MessagingException ex) {
            System.out.println("Error101");
        }
        
        
      
    }//GEN-LAST:event_closeTicketActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);

        try {
            Cab_Booking.ConnectionClass c = new Cab_Booking.ConnectionClass();
                String sql = "select * from TicketIssue";
                 ResultSet rs = c.s.executeQuery(sql);
                  
//
//                    st.setString(1, txtUser.getText());
//                    st.setString(2, txtPass.getText());

                   
            
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("ticket"),
                    rs.getInt("customerid"),
                    rs.getString("name"),
                    rs.getString("issue"),
                    rs.getString("status"),
                    rs.getString("email")
                });
//               rs.getString("activeState")
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeTicket;
    private javax.swing.JTextArea issue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelResponse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldEmailAdd;
    private javax.swing.JTable table;
    private javax.swing.JTextField ticketid;
    // End of variables declaration//GEN-END:variables
}
