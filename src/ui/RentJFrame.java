/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tanvikakde
 */
public class RentJFrame extends javax.swing.JFrame {

    /**
     * Creates new form RentJFrame
     */
    public RentJFrame() {
        initComponents();
        
        jDateChooser_Rent.setDateFormatString("yyyy-MM-dd");
        jDateChooser_Return.setDateFormatString("yyyy-MM-dd");
        
        Update_Table();
        LoadCar_iD();
        autoID();
    }
   
         public Void LoadCar_iD()
      {
       try{
       
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/BONVOYAGE", "root", "shivani3299");
        PreparedStatement pstmt = c.prepareStatement("SELECT * FROM CARS WHERE STATUS='Available'");
        ResultSet rs = pstmt.executeQuery();
        jComboBox_Rent.removeAllItems();
        
        
        while(rs.next())
        {
                jComboBox_Rent.addItem(rs.getString(2));
        
        }        
       
          
   
    }   catch (ClassNotFoundException ex) {
            Logger.getLogger(RentJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RentJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       return null;
      
       
      }
//    
//    Public void LoadCategory() 
//    {
//         
//    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        txtCustomer_Id = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRent = new javax.swing.JTable();
        txtFirst_Name = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtLast_Name = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        jComboBox_PickUp = new javax.swing.JComboBox<>();
        lblLastName = new javax.swing.JLabel();
        jComboBox_Drop = new javax.swing.JComboBox<>();
        txtRentDate = new javax.swing.JLabel();
        jDateChooser_Return = new com.toedter.calendar.JDateChooser();
        txtReturnDate = new javax.swing.JLabel();
        jDateChooser_Rent = new com.toedter.calendar.JDateChooser();
        lblPickUp = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lblCarId = new javax.swing.JLabel();
        jComboBox_Rent = new javax.swing.JComboBox<>();
        lblRentId = new javax.swing.JLabel();
        txtRentId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.white);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel8.setText("Price:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 440, -1, -1));

        jButton3.setBackground(new java.awt.Color(255, 204, 204));
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 480, -1, -1));

        txtCustomer_Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomer_IdActionPerformed(evt);
            }
        });
        txtCustomer_Id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCustomer_IdKeyPressed(evt);
            }
        });
        getContentPane().add(txtCustomer_Id, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 270, 160, -1));

        jTableRent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Car Id", "Model", "Make", "Status", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableRent);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 77, 847, 172));
        getContentPane().add(txtFirst_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, 117, -1));
        getContentPane().add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 440, 104, -1));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setText("Customer Id:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 270, -1, -1));

        txtLast_Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLast_NameKeyReleased(evt);
            }
        });
        getContentPane().add(txtLast_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 320, 150, -1));

        lblFirstName.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblFirstName.setText("First Name:");
        getContentPane().add(lblFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, -1, -1));

        jComboBox_PickUp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Roxbury", "Jamaica Plain", "Mission Park", "Back Bay" }));
        jComboBox_PickUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_PickUpActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox_PickUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 400, -1, -1));

        lblLastName.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblLastName.setText("Last Name:");
        getContentPane().add(lblLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 320, -1, -1));

        jComboBox_Drop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Roxbury", "Jamaica Plain", "Mission Park", "Back Bay" }));
        getContentPane().add(jComboBox_Drop, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 400, -1, -1));

        txtRentDate.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        txtRentDate.setText("Rent Date:");
        getContentPane().add(txtRentDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, -1, -1));
        getContentPane().add(jDateChooser_Return, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 360, 172, -1));

        txtReturnDate.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        txtReturnDate.setText("Return Date:");
        getContentPane().add(txtReturnDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 360, -1, -1));
        getContentPane().add(jDateChooser_Rent, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 116, -1));

        lblPickUp.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblPickUp.setText("Pick Up:");
        getContentPane().add(lblPickUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, -1, -1));

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setText("Rent");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 480, -1, -1));

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel7.setText("Drop:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 400, 38, 23));

        lblCarId.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblCarId.setText("Car Id:");
        getContentPane().add(lblCarId, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, -1, -1));

        jComboBox_Rent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_RentActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox_Rent, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, -1, -1));

        lblRentId.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblRentId.setText("Rent_Id:");
        getContentPane().add(lblRentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 270, -1, -1));
        getContentPane().add(txtRentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, 129, -1));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jLabel2.setText("Rent A Car");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 181, 39));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/car1.jpeg"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void autoID() {

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/BONVOYAGE", "root", "shivani3299");
            Statement s = c.createStatement();

            ResultSet rs = s.executeQuery("SELECT MAX(RENT_ID) FROM RENT");
            rs.next();
            rs.getString("MAX(RENT_ID)");

            if (rs.getString("MAX(RENT_ID)") == null) {
                txtRentId.setText("C0001");
            } else {
                long id = Long.parseLong(rs.getString("MAX(RENT_ID)").substring(2, rs.getString("MAX(RENT_ID)").length()));
                id++;

                txtRentId.setText("C0" + String.format("%03d", id));

            }

        } catch (Exception ex) {
            System.out.println(ex);
        }

    }
    
       
    private void txtCustomer_IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomer_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomer_IdActionPerformed

    private void txtLast_NameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLast_NameKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtLast_NameKeyReleased

    private void txtCustomer_IdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomer_IdKeyPressed
        // TODO add your handling code here:
        
       if(evt.getKeyCode() == KeyEvent.VK_ENTER)
       {
           String Customer_Id = txtCustomer_Id.getText();
                 
       try{
         
            Class.forName("com.mysql.cj.jdbc.Driver");
               Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/BONVOYAGE", "root", "shivani3299");
               
               PreparedStatement pstmt2 = c.prepareStatement("SELECT * FROM CUSTOMERS WHERE CUSTOMER_ID = ?");
               pstmt2.setString(1, Customer_Id);
               ResultSet rs = pstmt2.executeQuery();
               
               
                 if(rs.next() == false)
                 {
                   JOptionPane.showMessageDialog(this, "Customer Id Not Found.");
                 }
                 else
                 {
                   String First_Name = rs.getString("First_Name");
                   txtFirst_Name.setText(First_Name.trim());
                   
                  String Last_Name = rs.getString("Last_Name");
                   txtLast_Name.setText(Last_Name.trim());
                 }
       
       }   catch (ClassNotFoundException ex) {
               Logger.getLogger(RentJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } catch (SQLException ex) {
               Logger.getLogger(RentJFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
        
        
        
    }//GEN-LAST:event_txtCustomer_IdKeyPressed

    private void jComboBox_RentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_RentActionPerformed
        // TODO add your handling code here:
        
        String Car_Id = jComboBox_Rent.getSelectedItem().toString();
       
         
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/BONVOYAGE", "root", "shivani3299");
                
               PreparedStatement pstmt = c.prepareStatement("SELECT * FROM CARS WHERE CAR_ID = ?");
               pstmt.setString(1, Car_Id);
               ResultSet rs = pstmt.executeQuery();
               
               
                 if(rs.next() == false)
                 {
                   JOptionPane.showMessageDialog(this, "Car Id Not Found.");
                 }
                 else
                 {
                   String Price = rs.getString("FEE_PER_DAY");
                   txtPrice.setText(Price.trim());
                 }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(RentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
               
       
                
               
    }//GEN-LAST:event_jComboBox_RentActionPerformed

    private void jComboBox_PickUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_PickUpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_PickUpActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        UserRentalMenuJFrame al = new UserRentalMenuJFrame();
        this.hide();
        al.setVisible(true);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        String Rent_Id = txtRentId.getText();
        String Car_Id = jComboBox_Rent.getSelectedItem().toString();
        String Customer_Id = txtCustomer_Id.getText();

        SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy-MM-dd");
        String RentDate = Date_Format.format(jDateChooser_Rent.getDate());

        SimpleDateFormat Date_Format1 = new SimpleDateFormat("yyyy-MM-dd");
        String ReturnDate = Date_Format1.format(jDateChooser_Return.getDate());

        String Pick_Up = jComboBox_PickUp.getSelectedItem().toString();
        String Drop = jComboBox_Drop.getSelectedItem().toString();
        String Price = txtPrice.getText();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/BONVOYAGE", "root", "shivani3299");

            PreparedStatement pstmt3 = c.prepareStatement("INSERT INTO CARS(RENT_ID, CAR_ID, CUSTOMER_ID, RENT_DATE, RETURN_DATE, PICKUP_LOCATION, DROP_LOCATION, PRICE) VALUES(?,?,?,?,?,?,?,?)");
            pstmt3.setString (1,Rent_Id);
            pstmt3.setString(2, Car_Id);
            pstmt3.setString(3, Customer_Id);
            pstmt3.setString(4, RentDate);
            pstmt3.setString(5, ReturnDate);
            pstmt3.setString(6, Pick_Up);
            pstmt3.setString(7, Drop);
            pstmt3.setString(8, Price );
            ResultSet rs = pstmt3.executeQuery();
            autoID();

            JOptionPane.showMessageDialog(this, "Your Booking Has Been Made!");
            // populateCARS();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RentJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RentJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed
public void Update_Table() {

        int r;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/BONVOYAGE", "root", "shivani3299");
            PreparedStatement pstmt = c.prepareStatement("SELECT * FROM CARS WHERE STATUS='Available'");
            ResultSet rs = pstmt.executeQuery();

            ResultSetMetaData rd = rs.getMetaData();
            r = rd.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) jTableRent.getModel();
            df.setRowCount(0);

            while (rs.next()) {

                Vector v2 = new Vector();

                for (int i = 1; i <= r; i++) {
                    v2.add(rs.getString("CAR_ID"));
                    v2.add(rs.getString("MODEL"));
                    v2.add(rs.getString("MAKE"));
                    v2.add(rs.getString("STATUS"));
                    v2.add(rs.getString("FEE_PER_DAY"));

                }
                df.addRow(v2);

            }

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RentJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RentJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox_Drop;
    private javax.swing.JComboBox<String> jComboBox_PickUp;
    private javax.swing.JComboBox<String> jComboBox_Rent;
    private com.toedter.calendar.JDateChooser jDateChooser_Rent;
    private com.toedter.calendar.JDateChooser jDateChooser_Return;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRent;
    private javax.swing.JLabel lblCarId;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblPickUp;
    private javax.swing.JLabel lblRentId;
    private javax.swing.JTextField txtCustomer_Id;
    private javax.swing.JTextField txtFirst_Name;
    private javax.swing.JTextField txtLast_Name;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JLabel txtRentDate;
    private javax.swing.JTextField txtRentId;
    private javax.swing.JLabel txtReturnDate;
    // End of variables declaration//GEN-END:variables
}

